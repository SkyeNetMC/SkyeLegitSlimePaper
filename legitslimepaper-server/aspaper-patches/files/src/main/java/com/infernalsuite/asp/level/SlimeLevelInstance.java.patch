--- a/src/main/java/com/infernalsuite/asp/level/SlimeLevelInstance.java
+++ b/src/main/java/com/infernalsuite/asp/level/SlimeLevelInstance.java
@@ -57,16 +_,10 @@
     public static LevelStorageSource CUSTOM_LEVEL_STORAGE;
 
     static {
-        try {
-            Path path = Files.createTempDirectory("swm-" + UUID.randomUUID().toString().substring(0, 5)).toAbsolutePath();
-            DirectoryValidator directoryvalidator = LevelStorageSource.parseValidator(path.resolve("allowed_symlinks.txt"));
-            CUSTOM_LEVEL_STORAGE = new LevelStorageSource(path, path, directoryvalidator, DataFixers.getDataFixer());
-
-            FileUtils.forceDeleteOnExit(path.toFile());
-
-        } catch (IOException ex) {
-            throw new IllegalStateException("Couldn't create dummy file directory.", ex);
-        }
+        // Moose start
+        Path path = MinecraftServer.getServer().server.getWorldContainer().toPath();
+        CUSTOM_LEVEL_STORAGE = LevelStorageSource.createDefault(path);
+        // Moose end
     }
 
     private static final ExecutorService WORLD_SAVER_SERVICE = Executors.newFixedThreadPool(4, new ThreadFactoryBuilder()
@@ -80,7 +_,7 @@
                               org.bukkit.World.Environment environment) throws IOException {
 
         super(slimeBootstrap, MinecraftServer.getServer(), MinecraftServer.getServer().executor,
-                CUSTOM_LEVEL_STORAGE.createAccess(slimeBootstrap.initial().getName() + UUID.randomUUID(), dimensionKey),
+                CUSTOM_LEVEL_STORAGE.createAccess("dat_files", dimensionKey), // Moose
                 primaryLevelData, worldKey, worldDimension,
                 MinecraftServer.getServer().progressListenerFactory.create(11), false, 0,
                 Collections.emptyList(), true, null, environment, null, null);
@@ -132,6 +_,7 @@
                 Bukkit.getPluginManager().callEvent(new WorldSaveEvent(getWorld()));
 
                 //this.getChunkSource().save(forceSave);
+                this.getDataStorage().saveAndJoin(); // Moose
                 this.serverLevelData.setWorldBorder(this.getWorldBorder().createSettings());
                 this.serverLevelData.setCustomBossEvents(MinecraftServer.getServer().getCustomBossEvents().save(MinecraftServer.getServer().registryAccess()));
 
